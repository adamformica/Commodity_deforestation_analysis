# prepare data and plot commodity loss over time
library(tidyr)
library(dplyr)
library(ggplot2)
library(broom)
library(stats)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/Data_preprocessing_and_plotting/")
zonal <- read.csv("hansen_mask_zonal.csv")
# prepare data and plot commodity loss over time
library(tidyr)
library(dplyr)
library(ggplot2)
library(broom)
library(stats)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
zonal <- read.csv("Data_preprocessing_and_plotting/hansen_mask_zonal.csv")
# subset and rename columns
zonal_sub <- select(zonal,ADMIN,HISTO_1:HISTO_15)
colnames(zonal_sub)[2:16] <- 2001:2015
# reorder country factor levels by summed commodity loss to show countries in desired order on plot
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "DRC")
zonal_sub[zonal_sub$ADMIN=="Democratic Republic of the Congo",]$ADMIN <- "DRC"
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "USA")
zonal_sub[zonal_sub$ADMIN=="United States of America",]$ADMIN <- "USA"
# gather annual commodity loss data for plotting
zonal_gather <- gather(zonal_sub,"year","cells",2:16)
# convert annual commodity loss data to numeric
zonal_gather$year <- as.numeric(zonal_gather$year)
# convert cells of annual commodity loss to sq km
zonal_gather$cells <- zonal_gather$cells * 934.7356 / 1000
# Convert sq km to Mha
zonal_gather$cells <- zonal_gather$cells * 10^2/10^6
# Rename cells to loss area
zonal_gather_rename <- zonal_gather %>%
dplyr::rename(loss_area=cells)
# Load country order by cumulative deforestation
country_order <- readRDS(file="country_order.rds")
countries_top <- country_order[1:20]
# Select top 20 countries for plotting
zonal_gather_top <- zonal_gather_rename %>%
filter(ADMIN %in% countries_top)
zonal_gather_top$ADMIN <- factor(zonal_gather_top$ADMIN, levels = countries_top)
# plot commodity loss over time
# export resolution 850 x 850
# dev.new(width=8,height=8,noRStudioGD = TRUE)
ggplot(zonal_gather_top,aes(year,loss_area)) +
geom_point() +
facet_wrap(~ADMIN, scales = "free", ncol=4) +
labs(x = "Year", y = "Cumulative commodity deforestation (Mha)") +
scale_x_continuous(breaks = seq(2001,2015,4)) +
theme_bw()
zonal_gather_top_years_corrected <- zonal_gather_top %>%
mutate(year=year-2000)
deforestation_year_lm <- zonal_gather_top_years_corrected %>% group_by(ADMIN) %>%
do(fit_country = lm(loss_area ~ year, data = .))
coef_lm <- tidy(deforestation_year_lm, fit_country)
coef_spread <- function(x) {
coef_spread <- x %>% gather(variable,value,-(ADMIN:term)) %>%
unite(temp,term,variable) %>%
spread(temp, value)
colnames(coef_spread) <- gsub("\\(|\\)","",colnames(coef_spread))
colnames(coef_spread) <- gsub("\\.","_",colnames(coef_spread))
return(coef_spread)
}
# create text labels for plots
coef_lm_spread <- coef_spread(coef_lm)
zonal_gather_top_p_value <- coef_lm_spread %>%
select(ADMIN,year_p_value) %>%
left_join(zonal_gather_top,by="ADMIN")
coef_lm_spread_low_p <- coef_lm_spread %>% filter(year_p_value<0.01)
coef_lm_spread_high_p <- coef_lm_spread %>% filter(year_p_value>=0.01)
coef_lm_spread_low_p$label <- paste0(signif(coef_lm_spread_low_p$year_estimate,1),
"x + ",signif(coef_lm_spread_low_p$Intercept_estimate,1),
",\np < 0.01")
coef_lm_spread_high_p$label <- paste0(signif(coef_lm_spread_high_p$year_estimate,1),
"x + ",signif(coef_lm_spread_high_p$Intercept_estimate,1),
",\np = ",signif(coef_lm_spread_high_p$year_p_value,1))
coef_lm_spread_labels <- bind_rows(coef_lm_spread_low_p,coef_lm_spread_high_p) %>%
select(ADMIN,label,year_p_value) %>%
arrange(ADMIN)
decreasing_countries <- c("Brazil")
coef_lm_spread_labels$x_value <- -Inf
coef_lm_spread_labels$y_value <- Inf
coef_lm_spread_labels[coef_lm_spread_labels$ADMIN %in% decreasing_countries,]$y_value <- -Inf
annual_plot <- ggplot(zonal_gather_top_p_value,aes(year,loss_area)) +
geom_point() +
geom_smooth(data = subset(zonal_gather_top_p_value, year_p_value < 0.05), method="lm", col = "black") +
facet_wrap(~ADMIN, scales = "free", ncol=4) +
labs(x = "Year", y = "Annual commodity-driven deforestation (Mha)") +
geom_text(
data    = subset(coef_lm_spread_labels, year_p_value < 0.05),
mapping = aes(x = x_value, y = y_value, label = label),
hjust   = "inward",
vjust   = "inward"
) +
theme_bw()
png("Figures/Annual_deforestation_022120.png",width=8,height=8,units="in",res=100)
print(annual_plot)
dev.off()
# prepare data and plot commodity loss over time
library(tidyr)
library(dplyr)
library(ggplot2)
library(broom)
library(stats)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
zonal <- read.csv("Data_preprocessing_and_plotting/hansen_mask_zonal.csv")
# subset and rename columns
zonal_sub <- select(zonal,ADMIN,HISTO_1:HISTO_15)
colnames(zonal_sub)[2:16] <- 2001:2015
# reorder country factor levels by summed commodity loss to show countries in desired order on plot
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "DRC")
zonal_sub[zonal_sub$ADMIN=="Democratic Republic of the Congo",]$ADMIN <- "DRC"
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "USA")
zonal_sub[zonal_sub$ADMIN=="United States of America",]$ADMIN <- "USA"
# gather annual commodity loss data for plotting
zonal_gather <- gather(zonal_sub,"year","cells",2:16)
# convert annual commodity loss data to numeric
zonal_gather$year <- as.numeric(zonal_gather$year)
# convert cells of annual commodity loss to sq km
zonal_gather$cells <- zonal_gather$cells * 934.7356 / 1000
# Convert sq km to Mha
zonal_gather$cells <- zonal_gather$cells * 10^2/10^6
# Rename cells to loss area
zonal_gather_rename <- zonal_gather %>%
dplyr::rename(loss_area=cells)
# Load country order by cumulative deforestation
country_order <- readRDS(file="Data_preprocessing_and_plotting/country_order.rds")
countries_top <- country_order[1:20]
# Select top 20 countries for plotting
zonal_gather_top <- zonal_gather_rename %>%
filter(ADMIN %in% countries_top)
zonal_gather_top$ADMIN <- factor(zonal_gather_top$ADMIN, levels = countries_top)
# plot commodity loss over time
# export resolution 850 x 850
# dev.new(width=8,height=8,noRStudioGD = TRUE)
ggplot(zonal_gather_top,aes(year,loss_area)) +
geom_point() +
facet_wrap(~ADMIN, scales = "free", ncol=4) +
labs(x = "Year", y = "Cumulative commodity deforestation (Mha)") +
scale_x_continuous(breaks = seq(2001,2015,4)) +
theme_bw()
zonal_gather_top_years_corrected <- zonal_gather_top %>%
mutate(year=year-2000)
deforestation_year_lm <- zonal_gather_top_years_corrected %>% group_by(ADMIN) %>%
do(fit_country = lm(loss_area ~ year, data = .))
coef_lm <- tidy(deforestation_year_lm, fit_country)
coef_spread <- function(x) {
coef_spread <- x %>% gather(variable,value,-(ADMIN:term)) %>%
unite(temp,term,variable) %>%
spread(temp, value)
colnames(coef_spread) <- gsub("\\(|\\)","",colnames(coef_spread))
colnames(coef_spread) <- gsub("\\.","_",colnames(coef_spread))
return(coef_spread)
}
# create text labels for plots
coef_lm_spread <- coef_spread(coef_lm)
zonal_gather_top_p_value <- coef_lm_spread %>%
select(ADMIN,year_p_value) %>%
left_join(zonal_gather_top,by="ADMIN")
coef_lm_spread_low_p <- coef_lm_spread %>% filter(year_p_value<0.01)
coef_lm_spread_high_p <- coef_lm_spread %>% filter(year_p_value>=0.01)
coef_lm_spread_low_p$label <- paste0(signif(coef_lm_spread_low_p$year_estimate,1),
"x + ",signif(coef_lm_spread_low_p$Intercept_estimate,1),
",\np < 0.01")
coef_lm_spread_high_p$label <- paste0(signif(coef_lm_spread_high_p$year_estimate,1),
"x + ",signif(coef_lm_spread_high_p$Intercept_estimate,1),
",\np = ",signif(coef_lm_spread_high_p$year_p_value,1))
coef_lm_spread_labels <- bind_rows(coef_lm_spread_low_p,coef_lm_spread_high_p) %>%
select(ADMIN,label,year_p_value) %>%
arrange(ADMIN)
decreasing_countries <- c("Brazil")
coef_lm_spread_labels$x_value <- -Inf
coef_lm_spread_labels$y_value <- Inf
coef_lm_spread_labels[coef_lm_spread_labels$ADMIN %in% decreasing_countries,]$y_value <- -Inf
annual_plot <- ggplot(zonal_gather_top_p_value,aes(year,loss_area)) +
geom_point() +
geom_smooth(data = subset(zonal_gather_top_p_value, year_p_value < 0.05), method="lm", col = "black") +
facet_wrap(~ADMIN, scales = "free", ncol=4) +
labs(x = "Year", y = "Annual commodity-driven deforestation (Mha)") +
geom_text(
data    = subset(coef_lm_spread_labels, year_p_value < 0.05),
mapping = aes(x = x_value, y = y_value, label = label),
hjust   = "inward",
vjust   = "inward"
) +
theme_bw()
png("Figures/Annual_deforestation_022120.png",width=8,height=8,units="in",res=100)
print(annual_plot)
dev.off()
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
proportions <- read.csv("Data_preprocessing_and_plotting/country_deforestation_proportion.csv")
percent <- proportions %>%
transmute(ADMIN,percent_loss_area=proportions$proportion_loss_area * 100)
break_row <- 20
percent_top <- percent[1:break_row,]
percent_bottom <- percent[(break_row+1):nrow(percent),]
percent_bottom_sum <- sum(percent_bottom$percent_loss_area)
other_row <- data.frame(ADMIN="Other",percent_loss_area=percent_bottom_sum)
percent_top_other <- bind_rows(percent_top,other_row)
percent_top_other$ADMIN <- factor(percent_top_other$ADMIN,
levels=rev(percent_top_other$ADMIN))
percent_plot <- ggplot(data=percent_top_other,
aes(ADMIN,percent_loss_area)) +
geom_col() +
geom_text(aes(label = paste0(signif(percent_loss_area,2),"%")),
hjust=0,vjust=0.5,size=3) +
ylab("Percent global commodity-driven deforestation (2001-2015)") +
xlab("Country") +
coord_flip(clip = "off")
png("Figures/Country_percent_deforestation_022120.png",width=6,height=6,units="in",res=100)
print(percent_plot)
dev.off()
# prepare data and plot commodity loss over time
library(tidyr)
library(dplyr)
library(ggplot2)
library(broom)
library(stats)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
zonal <- read.csv("Data_preprocessing_and_plotting/hansen_mask_zonal.csv")
# subset and rename columns
zonal_sub <- select(zonal,ADMIN,HISTO_1:HISTO_15)
colnames(zonal_sub)[2:16] <- 2001:2015
# reorder country factor levels by summed commodity loss to show countries in desired order on plot
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "DRC")
zonal_sub[zonal_sub$ADMIN=="Democratic Republic of the Congo",]$ADMIN <- "DRC"
levels(zonal_sub$ADMIN) <- c(levels(zonal_sub$ADMIN), "USA")
zonal_sub[zonal_sub$ADMIN=="United States of America",]$ADMIN <- "USA"
# gather annual commodity loss data for plotting
zonal_gather <- gather(zonal_sub,"year","cells",2:16)
# convert annual commodity loss data to numeric
zonal_gather$year <- as.numeric(zonal_gather$year)
# convert cells of annual commodity loss to sq km
zonal_gather$cells <- zonal_gather$cells * 934.7356 / 1000
# Convert sq km to Mha
zonal_gather$cells <- zonal_gather$cells * 10^2/10^6
# Rename cells to loss area
zonal_gather_rename <- zonal_gather %>%
dplyr::rename(loss_area=cells)
# Calculate cumulative deforestation
zonal_gather_cumulative <- zonal_gather_rename %>%
arrange(ADMIN,year) %>%
group_by(ADMIN) %>%
mutate(loss_area_cumulative=cumsum(loss_area)) %>%
select(-loss_area)
# Calculate fraction of deforestation by country
zonal_country_loss_area_cumulative <- zonal_gather_cumulative %>%
group_by(ADMIN) %>%
filter(year==2015) %>%
arrange(desc(loss_area_cumulative)) %>%
select(-year) %>%
ungroup()
# Write data for the table of fraction of deforestation possible to reduce
write.csv(zonal_country_loss_area_cumulative, "Data_preprocessing_and_plotting/zonal_country_loss_area_cumulative.csv", row.names = FALSE)
zonal_total_loss_area_cumulative <- zonal_country_loss_area_cumulative %>%
summarize(total_loss_area=sum(loss_area_cumulative))
zonal_country_loss_area_cumulative$total_loss_area <- zonal_total_loss_area_cumulative$total_loss_area
zonal_country_loss_area_cumulative_proportion <- zonal_country_loss_area_cumulative %>%
mutate(proportion_loss_area=loss_area_cumulative/total_loss_area) %>%
select(-(loss_area_cumulative:total_loss_area))
write.csv(zonal_country_loss_area_cumulative_proportion,"Data_preprocessing_and_plotting/country_deforestation_proportion.csv",row.names = FALSE)
# Save country order by cumulative deforestation
country_order <- as.vector(zonal_country_loss_area_cumulative_proportion$ADMIN)
saveRDS(country_order,file="country_order.rds")
zonal_gather_cumulative$ADMIN <- factor(zonal_gather_cumulative$ADMIN, levels = country_order)
countries_top <- country_order[1:20]
# Select top 20 countries for plotting
zonal_gather_top <- zonal_gather_cumulative %>%
filter(ADMIN %in% countries_top)
zonal_gather_top$ADMIN <- factor(zonal_gather_top$ADMIN, levels = countries_top)
# plot commodity loss over time
# export resolution 850 x 850
# dev.new(width=8,height=8,noRStudioGD = TRUE)
ggplot(zonal_gather_top,aes(year,loss_area_cumulative)) +
geom_point() +
facet_wrap(~ADMIN, scales = "free", ncol=4) +
labs(x = "Year", y = "Cumulative commodity deforestation (Mha)") +
theme_bw()
# See the following
# https://stats.stackexchange.com/questions/11947/fitting-an-exponential-model-to-data
# https://stats.stackexchange.com/questions/183653/getting-the-right-starting-values-for-an-nls-model-in-r
# take logs of both sides and fit a linear model to estimates of log(a) and b
zonal_gather_top_years_corrected <- zonal_gather_top %>%
mutate(year=year-2000)
deforestation_year_nls <- zonal_gather_top_years_corrected %>% group_by(ADMIN) %>%
do(fit_country = nls(loss_area_cumulative ~ a*b^year, data = .,))
deforestation_year_log_lm <- zonal_gather_top_years_corrected %>% group_by(ADMIN) %>%
do(fit_country = lm(log(loss_area_cumulative) ~ log(year), data = .))
coef_log_lm <- tidy(deforestation_year_log_lm, fit_country)
coef_spread <- function(x) {
coef_spread <- x %>% gather(variable,value,-(ADMIN:term)) %>%
unite(temp,term,variable) %>%
spread(temp, value)
colnames(coef_spread) <- gsub("\\(|\\)","",colnames(coef_spread))
colnames(coef_spread) <- gsub("logyear","log_year",colnames(coef_spread))
colnames(coef_spread) <- gsub("\\.","_",colnames(coef_spread))
return(coef_spread)
}
coef_log_lm_spread <- coef_spread(coef_log_lm)
zonal_gather_coef <- coef_log_lm_spread %>%
select(ADMIN,log_year_estimate,Intercept_estimate) %>%
left_join(zonal_gather_top_years_corrected,by="ADMIN")
deforestation_year_nls <- zonal_gather_coef %>% group_by(ADMIN) %>%
do(fit_country = nls(loss_area_cumulative ~ a*year^b, data = .,
start = list(a = exp(first(.$Intercept_estimate)),
b = first(.$log_year_estimate))))
predictions <- lapply(deforestation_year_nls$fit_country,predict)
predictions_df <- data.frame(matrix(unlist(predictions), nrow=lengths(predictions)[1]))
colnames(predictions_df) <- deforestation_year_nls$ADMIN
predictions_gather <- predictions_df %>% gather(ADMIN,prediction)
predictions_gather$ADMIN <- factor(predictions_gather$ADMIN, levels = countries_top)
years <- rep(seq(1,lengths(predictions)[1])+2000,length(predictions))
predictions_years <- predictions_gather %>% mutate(year=years)
zonal_gather_predictions <- zonal_gather_top %>% left_join(predictions_years,by=c("ADMIN","year"))
# create text labels for plots
coef_nls <- tidy(deforestation_year_nls, fit_country)
coef_nls_spread <- coef_spread(coef_nls)
labels <- paste0(signif(coef_nls_spread$a_estimate,2),"x^",signif(coef_nls_spread$b_estimate,2))
countries <- factor(countries_top, levels = countries_top)
labels_df <- data.frame(ADMIN=countries,label=labels)
cumulative_plot <- ggplot(zonal_gather_predictions,aes(year,loss_area_cumulative)) +
facet_wrap(vars(ADMIN), scales = "free", ncol=4) +
labs(x = "Year", y = "Cumulative commodity-driven deforestation (Mha)") +
geom_point() +
geom_line(aes(year,prediction)) +
geom_text(
data    = labels_df,
mapping = aes(x = -Inf, y = Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
png("Figures/Cumulative_deforestation_022020.png",width=8,height=8,units="in",res=100)
print(cumulative_plot)
dev.off()
library(dplyr)
library(tools)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
# load country-level and global total cumulative deforestation
zonal_country_loss_area_cumulative <- read.csv("Data_preprocessing_and_plotting/zonal_country_loss_area_cumulative.csv")
loss_area_cumulative_global <- zonal_country_loss_area_cumulative %>%
summarize(loss_area_cumulative_sum=sum(loss_area_cumulative))
cumulative_deforestation <- zonal_country_loss_area_cumulative %>%
slice(1:20) %>%
mutate(loss_area_cumulative_global=loss_area_cumulative_global$loss_area_cumulative_sum)
# load area harvested
area_deforestation_countries_top_other <- read.csv("Data_preprocessing_and_plotting/area_deforestation_countries_top_other.csv")
# select top crops from 2015 and sum their area
area_harvested <- area_deforestation_countries_top_other %>%
filter(Item!="Other",
year==2015) %>%
group_by(Area) %>%
summarize(top_crop_area=sum(sum))
# join deforestation and area harvested and rename columns
deforestation_area_harvested <- left_join(cumulative_deforestation,area_harvested,by=c("ADMIN"="Area")) %>%
rename(country=ADMIN,
cumulative_deforestation=loss_area_cumulative,
cumulative_deforestation_global=loss_area_cumulative_global,
area_harvested=top_crop_area)
#' add columns for spared area and fraction of country and global deforestation
#' if fraction deforestation reduced > 1, set it to 1
#' because it's impossible to reduce more deforestation than there is
#' then drop global deforestation column
deforestation_fraction_reduced <- deforestation_area_harvested %>%
mutate(spared_area=area_harvested*0.2,
fraction_deforestation=spared_area/cumulative_deforestation,
fraction_deforestation_under_one=ifelse(fraction_deforestation>1,1,fraction_deforestation),
fraction_deforestation_global=(fraction_deforestation_under_one*cumulative_deforestation)/cumulative_deforestation_global) %>%
select(-cumulative_deforestation_global)
# convert fractions to percent and drop fraction columns
deforestation_percent_reduced <- deforestation_fraction_reduced %>%
mutate(percent_deforestation_under_one=fraction_deforestation_under_one*100,
percent_deforestation_global=fraction_deforestation_global*100) %>%
select(-contains("fraction"))
# finalize column order and headers
deforestation_percent_reduced_final <- deforestation_percent_reduced %>%
select(country,area_harvested,spared_area,cumulative_deforestation,
percent_deforestation_under_one,percent_deforestation_global) %>%
mutate_at(vars(-country),funs(signif(.,2))) %>%
mutate_at(vars(contains("percent")),funs(paste0(.,"%")))
colnames_no_underscore <- gsub("_"," ",colnames(deforestation_percent_reduced_final))
colnames_title_case <- toTitleCase(colnames_no_underscore)
#' Use =TRIM(A1), =MID(B1,4,LEN(B1)), and =C1&"," in Excel
colnames(deforestation_percent_reduced_final) <- c("Country",
"Area Harvested Widely Grown Crops (Mha)",
"Spared Area (Mha)",
"Cumulative Deforestation (Mha)",
"Percent Country-level Deforestation",
"Percent Global Deforestation")
write.csv(deforestation_percent_reduced_final,"Data_preprocessing_and_plotting/deforestation_percent_reduced_final.csv",row.names = FALSE)
# load plyr before dplyr to avoid masking of dplyr functions, e.g. summarize()
library(plyr)
library(dplyr)
library(tidyr)
library(gridExtra)
library(ggplot2)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
#' 1. Load original data from FAOSTAT
#' Available from http://www.fao.org/faostat/en/#data/QC
#' Bulk download for all countries and crops available from
#' http://fenixservices.fao.org/faostat/static/bulkdownloads/Production_Crops_E_All_Data.zip
#' Note: data were not uploaded to GitHub because of their large file size
area_all_areas <- read.csv("C:/Users/Sensonomic Admin/Desktop/Production_Crops_E_All_Data/Production_Crops_E_All_Data.csv")
#' 2. Preprocess data so it is in a format easy
#' to do dplyr analysis on.
# remove regions and special groups (below alaphabetical list of countries)
last_row <- which(area_all_areas$Area=="World")[1]-1
area_countries <- area_all_areas[1:last_row,]
# remove aggregated items (below alphabetical list of crops by country)
start_row <- which(area_countries$Item=="Cereals (Rice Milled Eqv)")[1]
end_row <- which(area_countries$Item=="Vegetables Primary")[1]
aggregated_items <- unique(area_countries[start_row:end_row,]$Item)
area_unique_crops <- area_countries[!(area_countries$Item %in% aggregated_items), ]
# select only area harvested element
area_area_harvested <- area_unique_crops[area_unique_crops$Element=="Area harvested",]
# remove year flags
flag_columns <- grep("F$",names(area_area_harvested),value = TRUE)
area_unflagged <- area_area_harvested[,!(names(area_unique_crops) %in% flag_columns)]
# remove years before 2001 and after 2015
area_recent <- area_unflagged[,-c(seq(8,ncol(area_unflagged)-16),ncol(area_unflagged))]
# remove unecessary description columns
area_necessary <- area_recent %>%
select(Area:Item,Y2001:Y2015)
# remove text from year names
colnames(area_necessary) <- gsub("Y","",colnames(area_necessary))
# gather all years, i.e. convert year columns to rows
area_gather <- area_necessary %>%
gather(year,area_harvested,-(Area:Item))
# convert years to numeric
area_gather$year <- as.numeric(area_gather$year)
#' 3. Subset top 20 countries with highest deforestation.
country_order <- readRDS(file="country_order.rds")
country_order <- country_order[1:20]
included_countries <- unique(area_gather[area_gather$Area %in% country_order,]$Area)
excluded_countries <- country_order[!(country_order %in% included_countries)]
long_names <- c("Bolivia (Plurinational State of)",
"Viet Nam",
"Lao People's Democratic Republic",
"United States of America",
"Democratic Republic of the Congo",
"Venezuela (Bolivarian Republic of)")
area_gather$Area <- mapvalues(area_gather$Area,long_names,excluded_countries)
area_deforestation_countries <- area_gather[area_gather$Area %in% country_order,]
#' 4. Sum each item area by country to later calculate each item's
#' proportion of the country's total area across all items.
area_country_sum <- area_deforestation_countries %>%
group_by(Area, Item.Code) %>%
dplyr::summarize(sum = sum(area_harvested,na.rm = TRUE)) %>%
arrange(Area,desc(sum))
item_labels <- area_deforestation_countries %>%
ungroup() %>%
select(Item.Code,Item) %>%
distinct()
area_country_labels <- area_country_sum %>%
left_join(item_labels,by="Item.Code")
#' 5. Sum all item areas by country to later calculate each item's
#' proportion of the country's total area across all items.
area_country_total <- area_country_labels %>%
group_by(Area) %>%
dplyr::summarize(country_total=sum(sum,na.rm = TRUE))
#' 6. Calculate each item's proportion of the
#' country's total area across all items.
#' Select items with >10% of the country's total area
area_country_proportion <- area_country_labels %>%
left_join(area_country_total,by=c("Area")) %>%
mutate(country_proportion=sum/country_total)
area_country_top <- area_country_proportion %>%
filter(country_proportion>0.1) %>%
select(-Item)
#' 7. Join the reclassified item areas by country and year
#' with each item's proportion of the country's total area of all items.
#' Reclassify all items with <10% of the country's total area as "Other."
#' Sum item areas across countries and years again to calculate the
#' area of items in the "Other" category.
area_deforestation_countries_top <- left_join(area_deforestation_countries,area_country_top,
by=c("Area","Item.Code"))
levels(area_deforestation_countries_top$Item) <- c(levels(area_deforestation_countries_top$Item), "Other")
area_deforestation_countries_top[is.na(area_deforestation_countries_top$sum),]$Item <- "Other"
area_deforestation_countries_top_other <- area_deforestation_countries_top %>%
group_by(Area, Item, year) %>%
dplyr::summarize(sum = sum(area_harvested,na.rm = TRUE)) %>%
arrange(Area,Item,year,desc(sum))
#' 8. Reformat and plot data.
area_deforestation_countries_top_other$Area <- factor(area_deforestation_countries_top_other$Area, levels = country_order)
area_deforestation_countries_top_other$sum <- area_deforestation_countries_top_other$sum / 10^6
# Write data for the table of fraction of deforestation possible to reduce
write.csv(area_deforestation_countries_top_other, "Data_preprocessing_and_plotting/area_deforestation_countries_top_other.csv", row.names = FALSE)
export_plot <- ggplot(area_deforestation_countries_top_other, aes(year, sum)) +
facet_wrap(~Area, scales = "free", ncol=4) +
geom_area(aes(fill=Item),col="lightgray") +
geom_text(data = filter(area_deforestation_countries_top_other,year==2009),
aes(label = Item, group=Item, hjust=0.5),
position = position_stack(vjust = 0.5),
size=3,
lineheight = .75) +
labs(x = "Year", y = "Area harvested (Mha)") +
coord_cartesian(clip = "off") +
guides(fill=FALSE)
png("Figures/FAO_plot_total_area_031020.png",width=8,height=8,units="in",res=100)
print(export_plot)
dev.off()
