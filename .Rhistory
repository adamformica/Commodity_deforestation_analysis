col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" A", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(commodities_mask_sea_crop,col="red",legend=FALSE, interpolate=TRUE,axes=FALSE)
plot(countries_crop,add=T)
mtext(" B", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(hansen_mask_sea_crop,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" C", side = 3, line = -2, adj=0, font=2, cex=1.2)
# World maps
dev.new(width=8,height=10,noRStudioGD = TRUE)
par(mar = c(0.5,0,0.5,1))
par(mfrow=c(3,1))
plot(hansen_merge_year,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" A", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(commodities_mask,col="red",legend=FALSE, interpolate=TRUE,axes=FALSE)
plot(countries_crop,add=T)
mtext(" B", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(hansen_mask_year,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" C", side = 3, line = -2, adj=0, font=2, cex=1.2)
# Southeast Asia maps
dev.new(width=6,height=10,noRStudioGD = TRUE)
par(mar = c(0.5,0,0.5,1))
par(mfrow=c(3,1))
plot(hansen_merge_sea_crop,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" A", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(commodities_mask_sea_crop,col="red",legend=FALSE, interpolate=TRUE,axes=FALSE)
plot(countries_crop,add=T)
mtext(" B", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(hansen_mask_sea_crop,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" C", side = 3, line = -2, adj=0, font=2, cex=1.2)
# South America maps
dev.new(width=5,height=10,noRStudioGD = TRUE)
par(mar = c(0.5,0,0.5,1))
par(mfrow=c(3,1))
plot(hansen_merge_sa_crop,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" A", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(commodities_mask_sa_crop,col="red",legend=FALSE, interpolate=TRUE,axes=FALSE)
plot(countries_crop,add=T)
mtext(" B", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(hansen_mask_sa_crop,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" C", side = 3, line = -2, adj=0, font=2, cex=1.2)
library(raster)
library(rgdal)
commodities_mask <- raster("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/commodities_mask.tif")
commodities_mask
hansen_mask
hansen_merge <- raster("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/hansen_merge_10km.tif")
hansen_merge
library(raster)
library(rgdal)
hansen_merge <- raster("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/hansen_merge_10km.tif")
commodities_mask <- raster("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/commodities_mask.tif")
hansen_mask <- raster("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/hansen_mask_10km.tif")
hansen_merge[hansen_merge==0] <- NA
hansen_mask[hansen_mask==0] <- NA
hansen_merge_year <- hansen_merge + 2000
hansen_mask_year <- hansen_mask + 2000
countries <- readOGR("C:/Users/Sensonomic Admin/Desktop/Curtis_commodity_loss/ne_50m_admin_0_countries/ne_50m_admin_0_countries.shp")
countries_no_gl <- countries[-182,]
countries_transform <- spTransform(countries_no_gl,crs(hansen_merge))
countries_crop <- crop(countries_transform, extent(hansen_merge))
sea_countries <- countries_transform[countries_transform$SUBREGION=="South-Eastern Asia",]
sa_countries <- countries_transform[countries_transform$SUBREGION=="South America",]
#' Remove South America islands
sa_xmin <- extent(sa_countries[sa_countries$ADMIN=="Peru",])[1]
sa_xmax <- extent(sa_countries[sa_countries$ADMIN=="Brazil",])[2]
sa_ymin <- extent(sa_countries[sa_countries$ADMIN=="Chile",])[3]
sa_ymax <- extent(sa_countries[sa_countries$ADMIN=="Colombia",])[4]
sa_extent <- extent(sa_xmin,sa_xmax,sa_ymin,sa_ymax)
hansen_merge_sea_crop <- crop(hansen_merge_year,extent(sea_countries))
commodities_mask_sea_crop <- crop(commodities_mask,extent(sea_countries))
hansen_mask_sea_crop <- crop(hansen_mask_year,extent(sea_countries))
hansen_merge_sa_crop <- crop(hansen_merge_year,extent(sa_extent))
commodities_mask_sa_crop <- crop(commodities_mask,extent(sa_extent))
hansen_mask_sa_crop <- crop(hansen_mask_year,extent(sa_extent))
# World maps
dev.new(width=8,height=10,noRStudioGD = TRUE)
par(mar = c(0.5,0,0.5,1))
par(mfrow=c(3,1))
plot(hansen_merge_year,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" A", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(commodities_mask,col="red",legend=FALSE, axes=FALSE)
plot(countries_crop,add=T)
mtext(" B", side = 3, line = -2, adj=0, font=2, cex=1.2)
plot(hansen_mask_year,interpolate=TRUE,axes=FALSE,
col=colorRampPalette(c("purple", "darkorange"))( 17 ),
legend.args = list(text = 'Year', side = 4,
font = 2, line = 3.5, cex = 0.8))
plot(countries_crop,add=T)
mtext(" C", side = 3, line = -2, adj=0, font=2, cex=1.2)
library(dplyr)
library(ggplot2)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
deforestation_area_harvested <- read.csv("Data_preprocessing_and_plotting/deforestation_area_harvested.csv")
efficiency_gains <- seq(0.1,0.9,0.1)
fractions_deforestation <- vector()
for (i in 1:length(efficiency_gains)) {
deforestation_fraction_reduced <- deforestation_area_harvested %>%
mutate(spared_area=area_harvested*efficiency_gains[i],
fraction_deforestation=spared_area/cumulative_deforestation,
fraction_deforestation_under_one=ifelse(fraction_deforestation>1,1,fraction_deforestation),
fraction_deforestation_global=(fraction_deforestation_under_one*cumulative_deforestation)/cumulative_deforestation_global) %>%
select(-cumulative_deforestation_global)
fractions_deforestation[i] <- sum(deforestation_fraction_reduced$fraction_deforestation_global)
}
efficiency_deforestation <- data.frame(efficeincy_gain=efficiency_gains,fraction_deforestation=fractions_deforestation)
efficiency_deforestation
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
proportions <- read.csv("Data_preprocessing_and_plotting/country_deforestation_proportion.csv")
percent <- proportions %>%
transmute(ADMIN,percent_loss_area=proportions$proportion_loss_area * 100)
break_row <- 20
percent_top <- percent[1:break_row,]
percent_bottom <- percent[(break_row+1):nrow(percent),]
percent_bottom_sum <- sum(percent_bottom$percent_loss_area)
other_row <- data.frame(ADMIN="Other",percent_loss_area=percent_bottom_sum)
percent_top_other <- bind_rows(percent_top,other_row)
percent_top_other$ADMIN <- factor(percent_top_other$ADMIN,
levels=rev(percent_top_other$ADMIN))
percent_plot <- ggplot(data=percent_top_other,
aes(ADMIN,percent_loss_area)) +
geom_col() +
geom_text(aes(label = paste0(signif(percent_loss_area,2),"%")),
hjust=0,vjust=0.5,size=3) +
ylab("Percent global commodity-driven deforestation (2001-2015)") +
xlab("Country") +
coord_flip(clip = "off")
percent_plot
percent_plot
percent_top_other
percent_top
percent
proportions
proportions$rank <- seq(1,nrow(proportions))
proportions
ggplot(data=proportions,
aes(log(rank),log(proportion_loss_area))) +
geom_point()
library(ggplot2)
library(dplyr)
library(tidyr)
setwd("C:/Users/Sensonomic Admin/Dropbox/Oxford/DPhil/Commodity deforestation/Commodity_deforestation_analysis_GitHub/Commodity_deforestation_analysis/")
proportions <- read.csv("Data_preprocessing_and_plotting/country_deforestation_proportion.csv")
percent <- proportions %>%
transmute(ADMIN,percent_loss_area=proportions$proportion_loss_area * 100)
break_row <- 20
percent_top <- percent[1:break_row,]
percent_bottom <- percent[(break_row+1):nrow(percent),]
percent_bottom_sum <- sum(percent_bottom$percent_loss_area)
other_row <- data.frame(ADMIN="Other",percent_loss_area=percent_bottom_sum)
percent_top_other <- bind_rows(percent_top,other_row)
percent_top_other$ADMIN <- factor(percent_top_other$ADMIN,
levels=rev(percent_top_other$ADMIN))
percent_plot <- ggplot(data=percent_top_other,
aes(ADMIN,percent_loss_area)) +
geom_col() +
geom_text(aes(label = paste0(signif(percent_loss_area,2),"%")),
hjust=0,vjust=0.5,size=3) +
ylab("Percent global commodity-driven deforestation (2001-2015)") +
xlab("Country") +
coord_flip(clip = "off")
percent_top
percent_top$rank <- seq(1,nrow(percent_top))
percent_top
ggplot(data=percent_top,
aes(log(rank),log(percent_top))) +
geom_point()
percent_top
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point()
percent_top$rank <- rev(seq(1,nrow(percent_top)))
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point()
percent_top$rank
percent_top$rank <- seq(1,nrow(percent_top))
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
ylab("Percent global commodity-driven deforestation (2001-2015)") +
xlab("Country")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
ylab("Log(percent global deforestation)") +
xlab("Country")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
ylab("Log(percent global deforestation)") +
xlab("Country")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
theme_bw()
log(1)
log(10)
e(1)
e^1
exp(1)
percent_top$rank
exp(1)
log(1)
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
theme_bw()
percent_top$rank <- seq(1,nrow(percent_top))
percent_top_log_lm <- lm(log(percent_loss_area) ~ log(rank), data = percent_top)
percent_top_log_lm
summary(percent_top_log_lm)
tidy(percent_top_log_lm)
?tidy
library(broom)
?tidy
tidy(percent_top_log_lm)
tidy(percent_top_log_lm)
log_lm_tidy <- tidy(percent_top_log_lm)
log_lm_tidy$term
log_lm_tidy$estimate
log_lm_tidy$estimate[1]
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2))
label
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2),
"p < 0.01")
label
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2),
"\np < 0.01")
label
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
data    = label,
mapping = aes(x = -Inf, y = Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
?geom_label
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = -Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = -Inf, label = label),
hjust   = 1,
vjust   = 1
) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = -Inf, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
geom_text(
mapping = aes(x = -Inf, y = 0, label = label),
hjust   = 0,
vjust   = 1
) +
theme_bw()
annotate("text",(x = -Inf, y = 0,label=label) +
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",x = -Inf, y = 0,label=label) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",x = -Inf, y = Inf,label=label) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = Inf, label = label,
hjust   = 0,
vjust   = 1) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = 0,
vjust   = 1) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = 0,
vjust   = 0) +
theme_bw()
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2),
"\np < 0.01\n")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = 0,
vjust   = 0) +
theme_bw()
?annotate
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = 0.5,
vjust   = 0) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = -0.5,
vjust   = 0) +
theme_bw()
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = -0.5,
vjust   = -0.5) +
theme_bw()
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2),
"\np < 0.01")
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = -Inf, y = -Inf, label = label,
hjust   = -0.5,
vjust   = -0.5) +
theme_bw()
label <- paste0(signif(log_lm_tidy$estimate[2],2),
"x + ",signif(log_lm_tidy$estimate[1],2),
"\np < 0.01")
label
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = Inf, y = Inf, label = label,
hjust   = 1,
vjust   = 1) +
theme_bw()
log_lm_tidy
percent_top_log_lm
summary(percent_top_log_lm)$r.squared
ggplot(data=percent_top,
aes(log(rank),log(percent_loss_area))) +
geom_point() +
geom_smooth(method="lm", col = "black", size=0.5, se=FALSE) +
ylab("Log(percent global deforestation)") +
xlab("Log(country rank)") +
annotate("text",
x = Inf, y = Inf, label = label,
hjust   = 1,
vjust   = 1) +
theme_bw()
ggsave("Figures/Country_percent_deforestation_log_log_plot_092920.png", width = 4, height = 3.5)
?geom_smooth
